

//creates a text file of a specific number of random numbers
void rand_string(int length);

//creates a text file that has the sum of a charactor's ASCII number and another number for a given number of values
void add_string(char*array1,int*array2,int length);

//creates a text file that has the difference of two array values for a given number of values
void subtract_string(char*array1,int*array2,int length);

//creates a text file that has characters with ASCII numbers 1 greater than inputed characters in an array of a given length
void encrypts(char*array,int length);

//creates a text file that has characters with ASCII numbers 1 less than inputed characters in an array of a given length
void decrypts(char*array,int length);

//reads in a file name and reads in the characters to an array and offers options of how to encrypt/decrypt the information in the array
void input_text_to_array_x_encrypt_decrypt();


//Public Key encryption functions
//generates a random number between a and b
long int prime_gen(long int a, long int b);

//calls prime_gen and actually returns a prime number in given range
long int number(long int a, long int b);

// checks if a number is prime
long int prime_check (long int x);

//generates possible prime values for the key e that are between 1 and m
void gen_e();

//encrypts message
void encrypt();

// decrpyts message
void decrypt();

void main_public();

long int gen_d(long int x);

// Represents integer values as 1’s and 0’s
void printBits(size_t const size, void const * const ptr);  //check if needed

void binary(void);


